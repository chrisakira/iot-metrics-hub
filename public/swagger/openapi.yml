servers:
- url: http://localhost:5000
  description: Development server
- url: http://localhost:5000
  description: Development server
paths:
  /alive:
    get:
      summary: Service Health Method
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        '424':
          description: Failed dependency response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        '503':
          description: Service unavailable response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
  /v1/device:
    get:
      summary: Get device
      parameters:
      - name: name
        in: query
        description: Name of the device (Necessary only name or mac_address)
        required: true
        schema:
          type: string
          example: Akira
      - name: mac_address
        in: query
        description: Mac Address of the device (Necessary only name or mac_address)
        required: true
        schema:
          type: string
          example: 02:42:ac:11:22:33
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGetResponse'
        4xx:
          description: Record not found in the DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGetFindErrorResponse'
        4xy:
          description: Missing parameter in the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGetParamErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'
    post:
      summary: Device Create
      requestBody:
        description: Device to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGetResponse'
        4xx:
          description: Missing parameter in the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGetParamErrorResponse'
        4xy:
          description: Who knows ?????????
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnkownErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'
    put:
      summary: Update the Device info in the DB
      requestBody:
        description: Device to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceUpdate'
      responses:
        '200':
          description: Success response (Responds only with the sent fields)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGetResponse'
        4xx:
          description: Record not found in the DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGetFindErrorResponse'
        4xy:
          description: Missing parameter in the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGetParamErrorResponse'
        4yy:
          description: Who knows ?????????
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnkownErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'
    delete:
      summary: Soft Product Delete
      parameters:
      - in: path
        name: uuid
        description: Product Id
        required: true
        schema:
          type: string
          format: uuid
          example: 4bcad46b-6978-488f-8153-1c49f8a45244
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSoftDeleteResponse'
        4xx:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSoftDeleteErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSoftDeleteErrorResponse'
  /v1/device/list:
    get:
      summary: Product Get
      parameters:
      - in: path
        name: uuid
        description: Product Id
        required: true
        schema:
          type: string
          format: uuid
          example: 4bcad46b-6978-488f-8153-1c49f8a45244
      - name: fields
        in: query
        description: Filter fields with comma
        required: false
        schema:
          type: string
          example: null
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HateosProductGetResponse'
        4xx:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGetErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGetErrorResponse'
  /v1/device/ping:
    delete:
      summary: Soft Product Delete
      parameters:
      - in: path
        name: uuid
        description: Product Id
        required: true
        schema:
          type: string
          format: uuid
          example: 4bcad46b-6978-488f-8153-1c49f8a45244
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSoftDeleteResponse'
        4xx:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSoftDeleteErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSoftDeleteErrorResponse'
  /v1/device/log:
    delete:
      summary: Soft Product Delete
      parameters:
      - in: path
        name: uuid
        description: Product Id
        required: true
        schema:
          type: string
          format: uuid
          example: 4bcad46b-6978-488f-8153-1c49f8a45244
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSoftDeleteResponse'
        4xx:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSoftDeleteErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSoftDeleteErrorResponse'
  /v1/table:
    post:
      summary: Product Create
      requestBody:
        description: Product to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateResponse'
        4xx:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
  /v1/table/list:
    post:
      summary: Product Create
      requestBody:
        description: Product to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateResponse'
        4xx:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
  /v1/table/create:
    post:
      summary: Product Create
      requestBody:
        description: Product to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateResponse'
        4xx:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
  /v1/table/delete:
    post:
      summary: Product Create
      requestBody:
        description: Product to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateResponse'
        4xx:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
  /v1/table/truncate:
    post:
      summary: Product Create
      requestBody:
        description: Product to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateResponse'
        4xx:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
  /v1/table/insert:
    post:
      summary: Product Create
      requestBody:
        description: Product to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateResponse'
        4xx:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
  /v1/table/insert/array:
    post:
      summary: Product Create
      requestBody:
        description: Product to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateResponse'
        4xx:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
info:
  title: iot-metrics-hub
  version: 0.0.1
openapi: 3.0.2
components:
  schemas:
    Entry:
      type: object
      properties:
        status:
          type: string
          example: healthy
        duration:
          type: string
          example: '0:00:00.013737'
        tags:
          type: array
          items:
            type: string
            example: db
    EntryData:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Entry'
    HealthCheck:
      type: object
      properties:
        status:
          type: string
          example: healthy
        total_duration:
          type: string
          example: '0:00:00.013737'
        entries:
          $ref: '#/components/schemas/EntryData'
    Device:
      type: object
      properties:
        name:
          type: string
          description: Name of the device
          example: Akira
        mac_address:
          type: string
          description: Mac Address of the device
          example: 02:42:ac:11:22:33
        description:
          type: string
          description: Description of the device
          example: Device description
        active:
          type: integer
          enum:
          - 0
          - 1
          description: Defines if the device is active
        status:
          type: integer
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          description: Defines the status of the device
        model:
          type: string
          description: Model of the device
          example: ESP32
        firmware:
          type: string
          description: Firmware running in the device
          example: V0.0.1
        last_seen:
          type: string
          format: date-time
          description: last time the device was seen
          example: '2024-02-29 03:21:13.000'
        created_at:
          type: string
          format: date-time
          description: Creation date of the device in the DB
          example: '2024-02-29 03:21:13.000'
        updated_at:
          type: string
          format: date-time
          description: Last time the device was updated
          example: '2024-02-29 03:21:13.000'
        deleted_at:
          type: string
          format: date-time
          description: When the device was deleted
          example: '2024-02-29 03:21:13.000'
        delete_status:
          type: integer
          enum:
          - 0
          - 1
          description: Defines if the device was marked for deletion
      required:
      - active
      - description
      - firmware
      - mac_address
      - model
      - name
      - status
    DeviceGetResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        code:
          type: integer
          example: 1
        label:
          type: string
          example: common.success
        message:
          type: string
          example: Success
        params:
          type: array
          items:
            type: string
        data:
          $ref: '#/components/schemas/Device'
      required:
      - code
    DeviceGetFindErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        code:
          type: integer
          example: 14
        label:
          type: string
          example: common.error.find_error
        message:
          type: string
          example: Unable to find the record
        params:
          type: array
          items:
            type: string
        details:
          type: string
        trace:
          type: string
    DeviceGetParamErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        code:
          type: integer
          example: 13
        label:
          type: string
          example: common.error.param_required_error
        message:
          type: string
          example: Parameter %s is required
        params:
          type: array
          items:
            type: string
        details:
          type: string
        trace:
          type: string
    InternalErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        code:
          type: integer
          example: 7
        label:
          type: string
          example: common.error.internal_server_error
        message:
          type: string
          example: Internal Server Error
        params:
          type: array
          items:
            type: string
        details:
          type: string
        trace:
          type: string
    UnkownErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        code:
          type: integer
          example: 6
        label:
          type: string
          example: common.error.unknown_error
        message:
          type: string
          example: Unknown error
        params:
          type: array
          items:
            type: string
        details:
          type: string
        trace:
          type: string
    DeviceUpdate:
      type: object
      properties:
        name:
          type: string
          description: Name of the device
          example: Akira
        mac_address:
          type: string
          description: Mac Address of the device
          example: 02:42:ac:11:22:33
        description:
          type: string
          description: Description of the device
          example: Device description
        active:
          type: integer
          enum:
          - 0
          - 1
          description: Defines if the device is active
        status:
          type: integer
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          description: Defines the status of the device
        model:
          type: string
          description: Model of the device
          example: ESP32
        firmware:
          type: string
          description: Firmware running in the device
          example: V0.0.1
        last_seen:
          type: string
          format: date-time
          description: last time the device was seen
          example: '2024-02-29 03:21:13.000'
        created_at:
          type: string
          format: date-time
          description: Creation date of the device in the DB
          example: '2024-02-29 03:21:13.000'
        updated_at:
          type: string
          format: date-time
          description: Last time the device was updated
          example: '2024-02-29 03:21:13.000'
        deleted_at:
          type: string
          format: date-time
          description: When the device was deleted
          example: '2024-02-29 03:21:13.000'
        delete_status:
          type: integer
          enum:
          - 0
          - 1
          description: Defines if the device was marked for deletion
      required:
      - mac_address
      - name
    ProductSoftDeleteResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        code:
          type: integer
          example: 1
        label:
          type: string
          example: common.success
        message:
          type: string
          example: Success
        params:
          type: array
          items:
            type: string
        data:
          type: object
          example:
            deleted: true
      required:
      - code
    ProductSoftDeleteErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        code:
          type: integer
          example: 18
        label:
          type: string
          example: common.error.update_error
        message:
          type: string
          example: Unable to update the record
        params:
          type: array
          items:
            type: string
        details:
          type: string
        trace:
          type: string
      required:
      - code
    Meta:
      type: object
      properties:
        href:
          type: string
          format: url
        next:
          type: string
          format: url
        previous:
          type: string
          format: url
        first:
          type: string
          format: url
        last:
          type: string
          format: url
    Link:
      type: object
      properties:
        href:
          type: string
        rel:
          type: string
        method:
          type: string
    Product:
      type: object
      properties:
        id:
          type: integer
          example: 1
        sku:
          type: integer
          example: 1
        name:
          type: string
          example: Common Pencil
        description:
          type: string
          example: Common Pencil Description
        supplier_id:
          type: integer
          example: 1
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
        active:
          type: integer
          enum:
          - 0
          - 1
        uuid:
          type: string
          format: uuid
          example: 4bcad46b-6978-488f-8153-1c49f8a45244
    HateosProductGetResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        code:
          type: integer
          example: 1
        label:
          type: string
          example: common.success
        message:
          type: string
          example: Success
        params:
          type: array
          items:
            type: string
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        data:
          $ref: '#/components/schemas/Product'
      required:
      - code
    ProductGetErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        code:
          type: integer
          example: 14
        label:
          type: string
          example: common.error.find_error
        message:
          type: string
          example: Unable to find the record
        params:
          type: array
          items:
            type: string
        details:
          type: string
        trace:
          type: string
      required:
      - code
    ProductCreateRequest:
      type: object
      properties:
        sku:
          type: integer
          example: 1
        name:
          type: string
          example: Common Pencil
        description:
          type: string
          example: Common Pencil description
        supplier_id:
          type: integer
          example: 1
        active:
          type: integer
          enum:
          - 0
          - 1
    ProductCreateResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        code:
          type: integer
          example: 1
        label:
          type: string
          example: common.success
        message:
          type: string
          example: Success
        params:
          type: array
          items:
            type: string
        data:
          $ref: '#/components/schemas/Product'
      required:
      - code
    ProductCreateErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        code:
          type: integer
          example: 17
        label:
          type: string
          example: common.error.create_error
        message:
          type: string
          example: Unable to create the record
        params:
          type: array
          items:
            type: string
        details:
          type: string
        trace:
          type: string
      required:
      - code
